Service:
  RegionId: cn-hangzhou
  DeployType: ros
  OperationMetadata:
    StatusOperationConfigs:
      - TemplateName: '单机版'
        SupportOperations:
          - Start
          - Stop
          - Restart
    SupportBackup: true
    
    ParameterConfigs:
      - TemplateName: '单机版'
        Parameters:
          
          Default.Test1:
            Type: String
            Default: liuzheng
            Description: 测试1
            AllowedPattern: ^[a-z]+$
            ConstraintDescription: 只可填小写字母
            
            
            
          
          Default.Test2:
            Type: Number
            Default: 1
            Description: 测试2
            
            
            MaxValue: 100
            
            
          
        Metadata:
           ParameterGroups:
             - Parameters:
                 - Test1
                 - Test2
               DefaultValue: |-
                 
                 MYSQL_HOST=mysql
                 MYSQL_USER=chatnio
               Formatter: env
               Name: Default
    
  DeployMetadata:
    SupplierDeployMetadata:
      SupplierTemplateConfigs:
        - Name: '单机版'
          Url: 'ros_templates/template.yaml'
          AllowedRegions:
              - cn-hangzhou
              - cn-shanghai
              - cn-beijing
      FileArtifactRelation:
        '{{ computenest::file::workhardliuzheng_chatNio-Test-docker-compose }}':
          ArtifactId: ${Artifact.Artifact_1.ArtifactId}
          ArtifactVersion: ${Artifact.Artifact_1.ArtifactVersion}
    TemplateConfigs:
      - Name: 单机版
        Url: 'ros_templates/template.yaml'
        AllowedRegions:
          - cn-hangzhou
          - cn-shanghai
          - cn-beijing
  ServiceType: private
  ServiceInfo:
    Locale: zh-CN
    ShortDescription: docker compose deploy
    Image: 'resources/icons/service_logo.png'
Artifact:
  Artifact_1:
    ArtifactType: File
    ArtifactName: workhardliuzheng_chatNio-Test-docker-compose
    ArtifactProperty:
      RegionId: cn-hangzhou
      Url: 'resources/artifact_resources/docker_compose.tar'
  Artifact_2:
    ArtifactType: AcrImage
    ArtifactName: AcrImage-mysql
    ArtifactProperty:
      RepoName: ${AcrImageBuilder.AcrImage_1.RepoName}
      Tag: ${AcrImageBuilder.AcrImage_1.Tag}
      RepoType: Public
  Artifact_3:
    ArtifactType: AcrImage
    ArtifactName: AcrImage-redis
    ArtifactProperty:
      RepoName: ${AcrImageBuilder.AcrImage_2.RepoName}
      Tag: ${AcrImageBuilder.AcrImage_2.Tag}
      RepoType: Public
  Artifact_4:
    ArtifactType: AcrImage
    ArtifactName: AcrImage-programzmh-chatnio
    ArtifactProperty:
      RepoName: ${AcrImageBuilder.AcrImage_3.RepoName}
      Tag: ${AcrImageBuilder.AcrImage_3.Tag}
      RepoType: Public
AcrImageBuilder:
  AcrImage_1:
    BuildType: DockerRepo
    DockerRepoUrl: mysql:latest
    RepoName: mysql
    Tag: latest
  AcrImage_2:
    BuildType: DockerRepo
    DockerRepoUrl: redis:latest
    RepoName: redis
    Tag: latest
  AcrImage_3:
    BuildType: DockerRepo
    DockerRepoUrl: programzmh/chatnio
    RepoName: programzmh/chatnio
    Tag: latest